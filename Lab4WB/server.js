const http = require('http'); // –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞
const fs = require('fs');     // –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é

const hostname = '127.0.0.1';
const port = 3000;

// --- –î–∞–Ω—ñ –°—Ç—É–¥–µ–Ω—Ç–∞ —Ç–∞ –§–∞–π–ª–æ–≤–∞ –°–∏—Å—Ç–µ–º–∞ ---
const studentData = {
    "name": "–ú–∞–∫—Å–∏–º",
    "group": "–ö–ù-31",
    "message": "–Ø –≤—á—É—Å—è –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ Node.js!"
};
const jsonFilePath = 'student.json';
// –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –Ω–∞ JSON-—Ä—è–¥–æ–∫ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Ç–∞ –∑–∞–ø–∏—Å—É
const studentJsonString = JSON.stringify(studentData, null, 2);

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –¥–∞–Ω–∏—Ö —É —Ñ–∞–π–ª –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É
function initializeStudentFile() {
    if (!fs.existsSync(jsonFilePath)) {
        try {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø–∏—Å, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ª–∏—à–µ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É
            fs.writeFileSync(jsonFilePath, studentJsonString, 'utf8');
            console.log(`‚úÖ –î–∞–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–æ —É —Ñ–∞–π–ª: ${jsonFilePath}`);
        } catch (err) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—É ${jsonFilePath}:`, err);
            process.exit(1); // –ê–≤–∞—Ä—ñ–π–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è, —è–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏–π —Ñ–∞–π–ª
        }
    } else {
        console.log(`‚ÑπÔ∏è –§–∞–π–ª ${jsonFilePath} –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ.`);
    }
}

// –§—É–Ω–∫—Ü—ñ—è-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä HTML –¥–ª—è –º–∞—Ä—à—Ä—É—Ç—É /student/html
function generateStudentHtml(data) {
    return `
        <!DOCTYPE html>
        <html>
        <head>
            <title>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –°—Ç—É–¥–µ–Ω—Ç–∞</title>
            <meta charset="utf-8">
            <style>
                body { font-family: sans-serif; padding: 20px; }
                table { border-collapse: collapse; width: 60%; margin-top: 20px; }
                th, td { border: 1px solid #999; padding: 10px; text-align: left; }
                th { background-color: #f0f0f0; }
            </style>
        </head>
        <body>
            <h1>üßë‚Äçüíª –î–∞–Ω—ñ –°—Ç—É–¥–µ–Ω—Ç–∞</h1>
            <table>
                <tr>
                    <th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th>
                    <th>–ó–Ω–∞—á–µ–Ω–Ω—è</th>
                </tr>
                <tr>
                    <td>–Ü–º'—è</td>
                    <td>${data.name}</td>
                </tr>
                <tr>
                    <td>–ì—Ä—É–ø–∞</td>
                    <td>${data.group}</td>
                </tr>
                <tr>
                    <td>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</td>
                    <td>${data.message}</td>
                </tr>
            </table>
            <p><a href="/">‚Üê –ù–∞ –ì–æ–ª–æ–≤–Ω—É</a></p>
        </body>
        </html>
    `;
}
// --- –ö—ñ–Ω–µ—Ü—å —Ñ—É–Ω–∫—Ü—ñ–π ---

const server = http.createServer((req, res) => {
    // –û–±—Ä–æ–±–∫–∞ –º–∞—Ä—à—Ä—É—Ç—ñ–≤
    if (req.url === '/') {
        // –ú–∞—Ä—à—Ä—É—Ç: / (–≥–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞)
        res.statusCode = 200;
        res.setHeader('Content-Type', 'text/html; charset=utf-8');
        res.end(`
            <html>
            <head><title>–ì–æ–ª–æ–≤–Ω–∞</title><meta charset="utf-8"></head>
            <body>
                <h1>üëã –ì–æ–ª–æ–≤–Ω–∞ –°—Ç–æ—Ä—ñ–Ω–∫–∞</h1>
                <p>–ü–µ—Ä–µ–ª—ñ–∫ –º–∞—Ä—à—Ä—É—Ç—ñ–≤:</p>
                <ul>
                    <li><a href="/about">/about</a></li>
                    <li><a href="/student">/student</a> (JSON)</li>
                    <li><a href="/student/html">/student/html</a> (HTML)</li>
                </ul>
            </body>
            </html>
        `);
    } else if (req.url === '/about') {
        // –ú–∞—Ä—à—Ä—É—Ç: /about
        res.statusCode = 200;
        res.setHeader('Content-Type', 'text/html; charset=utf-8');
        res.end(`
            <html>
            <head><title>–ü—Ä–æ –ù–∞—Å</title><meta charset="utf-8"></head>
            <body>
                <h1>‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å</h1>
                <p>–¶–µ–π —Å–µ—Ä–≤–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Node.js.</p>
                <p><a href="/">–ù–∞ –ì–æ–ª–æ–≤–Ω—É</a></p>
            </body>
            </html>
        `);
    } else if (req.url === '/student') {
        // 1. –ù–û–í–ò–ô –ú–ê–†–®–†–£–¢: /student (–≤–∏–≤–æ–¥–∏—Ç—å JSON)
        res.statusCode = 200;
        res.setHeader('Content-Type', 'application/json');
        res.end(studentJsonString);
    } else if (req.url === '/student/html') {
        // 2. –ù–û–í–ò–ô –ú–ê–†–®–†–£–¢: /student/html (–≤–∏–≤–æ–¥–∏—Ç—å HTML)
        res.statusCode = 200;
        res.setHeader('Content-Type', 'text/html; charset=utf-8');
        res.end(generateStudentHtml(studentData));
    } else {
        // –Ü–Ω—à—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (404 Not Found)
        res.statusCode = 404;
        res.setHeader('Content-Type', 'text/html; charset=utf-8');
        res.end(`
            <html>
            <head><title>404</title><meta charset="utf-8"></head>
            <body>
                <h1>‚ùå 404 - –°—Ç–æ—Ä—ñ–Ω–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h1>
                <p>–ú–∞—Ä—à—Ä—É—Ç ${req.url} –Ω–µ —ñ—Å–Ω—É—î.</p>
                <p><a href="/">–ù–∞ –ì–æ–ª–æ–≤–Ω—É</a></p>
            </body>
            </html>
        `);
    }
});

// 1. –ó–∞–ø–∏—Å –¥–∞–Ω–∏—Ö —É —Ñ–∞–π–ª –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É
initializeStudentFile();

// 2. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
server.listen(port, hostname, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ: http://${hostname}:${port}/`);
});